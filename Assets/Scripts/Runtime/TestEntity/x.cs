// /*--- This file is automatically generated by Xynok Codex ---*/
// using System;
// using Sirenix.OdinInspector;
// using UnityEngine;
// using XynokConvention;
// using XynokEntity.Enums;
// using XynokSourceGenerator.Entities.APIs;
// using XynokSourceGenerator.Entities.Data;
//
// namespace XynokSourceGenerator.Entities
// {
//     /// <summary>
//     /// Character base class ability
//     /// </summary>
//     [Serializable]
//     public abstract class ACharacterAbility : ICharacterAbility
//     {
//         protected ICharacter owner;
//         [FoldoutGroup(ConventionKey.Settings)]
//         [SerializeField]
//         [LabelWidth(130)]
//         [Space(10)]
//         private AbilityExecutorType executorType;
//         [FoldoutGroup(ConventionKey.Settings)]
//         [SerializeReference]
//         private ICharacterDataValidator validator;
//         private bool _canExecute;
//         private Action _onDispose;
//         public void SetDependency(ICharacter dependency)
//         {
//             Dispose();
//             if (dependency == null)
//             {
//                 Debug.LogError($"[{GetType().Name}]: dependency is null");
//                 return;
//             }
//
//             owner = dependency;
//             Init();
//         }
//
//         public void Dispose()
//         {
//             _onDispose?.Invoke();
//             _onDispose = default;
//             OnDispose();
//         }
//
//         public void Execute()
//         {
//             if (validator == null)
//                 Debug.LogWarning($"[{GetType().Name}]: execute validator is null");
//             if (validator != null && !validator.IsValid())
//                 return;
//             OnExecute();
//         }
//
//         void Init()
//         {
//             validator.SetDependency(owner);
//             _onDispose += validator.Dispose;
//             OnInit();
//         }
//
//         protected abstract void OnInit();
//         protected abstract void OnExecute();
//         public abstract void Reset();
//         protected abstract void OnDispose();
//     }
// }