{Scope}
using UnityEngine;
using XynokEntity.AnimPhasing.Data;
using Sirenix.OdinInspector;


namespace XynokSourceGenerator.Entities.StateMachine
{
   
    public class {EntityName}AnimatorStateMachine: StateMachineBehaviour
    {
       [ReadOnly] public {EntityName}AnimatorFrameDataContainer frameDataContainer;
       [ReadOnly] public AnimLayer layerData;
        
        
        
        // Note: anim event luôn dc gọi trước hàm này
        public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
        {
            var state = layerData.GetState(stateInfo);
            //Debug.Log($"state: {state.StateName} exited");
            if(state == null) return;
            
            if (state is NormalAnimState normalState)
            {
                frameDataContainer.ResolveStateOnExit(normalState.StateName);
                return;
            }
            
            if (state is BlendTreeAnimState blendTreeState)
            {
                foreach (var motion in blendTreeState.motionNames)
                {
                    frameDataContainer.ResolveStateOnExit(motion);
                }
                return;
            }            
        }
    }
   
{Body}
}

